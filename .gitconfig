[user]
	name = Daniel Rodriguez
	email = sadasant@gmail.com
	signingkey = /Users/danielrodriguez/.ssh/github.pub
[github]
    user = sadasant
[bitbucket]
    user = sadasant
[credential]
    helper = cache --timeout=3600
[push]
    default = simple
[core]
    editor = vim
    # eol = lf
    # autocrlf = false
[merge]
    tool = vimdiff
[color]
    status = auto
    branch = auto
    diff = auto
    interactive = auto
[pull]
    rebase = true
[alias]
    a = add
    b = branch
    cam = commit --no-verify --amend
    c = commit --no-verify -am
    clear = stash save --keep-index --include-untracked
    cm = commit --no-verify -m
    cob = checkout -b
    co = checkout
    d = diff
    graph = log --graph --color --all --pretty=format:"%C(yellow)%H%C(green)%d%C(reset)%n%x20%cd%n%x20%cn%x20(%ce)%n%x20%s%n"
    ignored = !git ls-files -v | grep "^[[:lower:]]"
    ignore = update-index --assume-unchanged
    l = log
    ls = log --stat
    merge-to = "!f(){ branch=`git branch | grep '* ' | tr -d '* '`; git checkout $1 -q && git merge $branch && git checkout $branch -q; };f"
    p = push
    r = reset
    rsh = reset --soft HEAD^
    shrug = "!f(){ branch=`git branch | grep '* ' | tr -d '* '`; git branch | grep -v $branch | xargs git branch -D; }; f"
    s = status
    sup = "!f(){ branch=`git branch | grep '* ' | tr -d '* '`; git push --set-upstream origin $branch; };f"
    unignore = update-index --no-assume-unchanged
    vv = status -v -v
    yolo = "!f(){ branch=`git branch | grep '* ' | tr -d '* '`; git push --set-upstream origin $branch --no-verify --force; };f"
    yolo-joaquin = "git push --set-upstream origin HEAD --no-verify --force"
	# commit-status: generate a commit with message from git-status (staged changes).
	# Source: https://gist.github.com/erikw/654386d35ecfdb0354cd2b71763f19ae
	commit-status = !" \
	        TMPFILE=$(mktemp /tmp/git-commit-status-message.XXX); \
		git status --porcelain \
		  | grep '^[MARCDT]' \
		  | sort \
		  | sed -re 's/^([[:upper:]])[[:upper:]]?[[:space:]]+/\\1:\\n/' \
		  | awk '!x[$0]++' \
		  | sed -re 's/^([[:upper:]]:)$/\\n\\1/' \
		  | sed -re 's/^M:$/Modified: /' \
		  | sed -re 's/^A:$/Added: /' \
		  | sed -re 's/^R:$/Renamed: /' \
		  | sed -re 's/^C:$/Copied: /' \
		  | sed -re 's/^D:$/Deleted: /' \
		  | sed -re 's/^T:$/File Type Changed: /' \
		  | tr '\n' ' ' | xargs \
		  > $TMPFILE; \
		cat $TMPFILE; \
	        commit=''; \
	        while :; do \
			echo '> Commit with this message? [Yn]: '; \
			read commit; \
			([ -z \"$commit\" ] || [ \"$commit\" = y ] || [ \"$commit\" = Y ] || [ \"$commit\" = n ]) && break; \
	        done; \
		test \"$commit\" != n || exit; \
		git commit -F $TMPFILE; \
		rm -f $TMPFILE \
		"
    cs = commit-status
    wip = "!f(){ git commit --no-verify -am wip && git push; };f"
